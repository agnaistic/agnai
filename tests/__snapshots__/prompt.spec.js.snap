// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Prompt building will build a basic prompt 1`] = `
"OtherBot's Persona: OtherBot replies a lot

Scenario: MAIN MainChar
How OtherBot speaks: SAMPLECHAT OtherBot

<START>
MainChar: FIRST
ChatOwner: SECOND
OtherBot:"
`;

exports[`Prompt building will build a continue prompt 1`] = `
"MainChar's Persona: MainCharacter talks a lot

Scenario: MAIN MainChar
How MainChar speaks: SAMPLECHAT MainChar

<START>
MainChar: FIRST
MainChar: ORIGINAL
MainChar:"
`;

exports[`Prompt building will exclude lowest priority memory to fit in budget 1`] = `
"OtherBot's Persona: OtherBot replies a lot

Scenario: MAIN MainChar
Facts:ENTRY TWO
ENTRY THREE
How OtherBot speaks: SAMPLECHAT OtherBot

<START>
MainChar: FIRST
ChatOwner: 1-TRIGGER
ChatOwner: 10-TRIGGER
ChatOwner: 20-TRIGGER
OtherBot:"
`;

exports[`Prompt building will exclude matches that are not a whole word match 1`] = `
"OtherBot's Persona: OtherBot replies a lot

Scenario: MAIN MainChar
Facts:ENTRY ONE
How OtherBot speaks: SAMPLECHAT OtherBot

<START>
MainChar: LONGWOR A
ChatOwner: 1-TRIGGER
OtherBot:"
`;

exports[`Prompt building will exclude memories triggered outside of memory depth 1`] = `
"OtherBot's Persona: OtherBot replies a lot

Scenario: MAIN MainChar
Facts:ENTRY TIE
ENTRY THREE
How OtherBot speaks: SAMPLECHAT OtherBot

<START>
MainChar: FIRST
ChatOwner: 1-TRIGGER
ChatOwner: TIE-TRIGGER
ChatOwner: 20-TRIGGER
OtherBot:"
`;

exports[`Prompt building will exclude sample chat when gaslight contains sample chat placeholder 1`] = `
"OtherBot's Persona: OtherBot replies a lot
Scenario: MAIN MainChar
This is how OtherBot should talk: SAMPLECHAT OtherBot
MainChar: FIRST
ChatOwner: SECOND
MainChar: ORIGINAL
OtherBot:"
`;

exports[`Prompt building will exclude scenario when empty in condition 1`] = `
"Roleplay instructions
How OtherBot speaks:
SAMPLECHAT OtherBot
<START>
MainChar: first
OtherBot:"
`;

exports[`Prompt building will include example dialogue with omitted from template (no longer true) 1`] = `
"GASLIGHT
ChatOwner
OtherBot
Facts: ENTRY ONE
ENTRY TIE
ENTRY THREE
How OtherBot speaks:
SAMPLECHAT OtherBot
<START>
MainChar: FIRST
ChatOwner: 1-TRIGGER
ChatOwner: TIE-TRIGGER
ChatOwner: 20-TRIGGER
OtherBot:"
`;

exports[`Prompt building will include example dialogue with omitted from template 1`] = `
"OtherBot's Persona: OtherBot replies a lot
Scenario: MAIN MainChar
Facts:ENTRY ONE
ENTRY TIE
ENTRY THREE

How OtherBot speaks: SAMPLECHAT OtherBot
<START>
MainChar: FIRST
ChatOwner: 1-TRIGGER
ChatOwner: TIE-TRIGGER
ChatOwner: 20-TRIGGER
OtherBot:"
`;

exports[`Prompt building will include gaslight for non-turbo adapter 1`] = `
"GASLIGHT ChatOwner
How OtherBot speaks:
SAMPLECHAT OtherBot
<START>
MainChar: FIRST
ChatOwner: 1-TRIGGER
ChatOwner: TIE-TRIGGER
ChatOwner: 20-TRIGGER
OtherBot:"
`;

exports[`Prompt building will include placeholders in the gaslight 1`] = `
"GASLIGHT
ChatOwner
OtherBot
Facts:ENTRY ONE
ENTRY TIE
ENTRY THREE
How OtherBot speaks:
SAMPLECHAT OtherBot
<START>
MainChar: FIRST
ChatOwner: 1-TRIGGER
ChatOwner: TIE-TRIGGER
ChatOwner: 20-TRIGGER
OtherBot:"
`;

exports[`Prompt building will include sample chat when gaslight does not contain sample chat placeholder 1`] = `
"Gaslight
How OtherBot speaks:
SAMPLECHAT OtherBot
System: New conversation started. Previous conversations are examples only.
MainChar: FIRST
ChatOwner: SECOND
MainChar: ORIGINAL
OtherBot:"
`;

exports[`Prompt building will include scenario when populated in condition 1`] = `
"Roleplay instructions
Scenario: Populated scenario
How OtherBot speaks:
SAMPLECHAT OtherBot
<START>
MainChar: first
OtherBot:"
`;

exports[`Prompt building will include ujb when omitted from gaslight 1`] = `
Object {
  "lines": Array [
    "MainChar: bot response",
  ],
  "parts": Object {
    "allPersonas": Array [
      "MainChar's personality: MainCharacter talks a lot",
    ],
    "chatEmbeds": Array [],
    "greeting": "GREETING",
    "memory": "",
    "persona": "OtherBot replies a lot",
    "post": Array [
      "OtherBot:",
    ],
    "sampleChat": Array [
      "SAMPLECHAT OtherBot",
    ],
    "scenario": "MAIN MainChar",
    "systemPrompt": "",
    "ujb": "",
    "userEmbeds": Array [],
  },
  "template": Object {
    "inserts": Map {},
    "parsed": "GASLIGHT TEMPLATE
ChatOwner
OtherBot
Auto-injected text:
How OtherBot speaks:
SAMPLECHAT OtherBot
<START>
MainChar: bot response
OtherBot:",
  },
}
`;

exports[`Prompt building will include will two memories by weight when triggered 1`] = `
"OtherBot's Persona: OtherBot replies a lot

Scenario: MAIN MainChar
Facts:ENTRY ONE
ENTRY TWO
How OtherBot speaks: SAMPLECHAT OtherBot

<START>
MainChar: FIRST
ChatOwner: 10-TRIGGER
ChatOwner: 1-TRIGGER
OtherBot:"
`;

exports[`Prompt building will not use the gaslight when set to false 1`] = `
"GASLIGHT
ChatOwner
OtherBot
Facts: ENTRY ONE
ENTRY TIE
ENTRY THREE
How OtherBot speaks:
SAMPLECHAT OtherBot
<START>
MainChar: FIRST
ChatOwner: 1-TRIGGER
ChatOwner: TIE-TRIGGER
ChatOwner: 20-TRIGGER
OtherBot:"
`;

exports[`Prompt building will omit sample chat when replyAs has no samplechat 1`] = `
"OtherBot's Persona: OtherBot replies a lot

Scenario: MAIN MainChar
<START>

OtherBot:"
`;

exports[`Prompt building will order by trigger position when weight tie occurs 1`] = `
"OtherBot's Persona: OtherBot replies a lot

Scenario: MAIN MainChar
Facts:ENTRY ONE
ENTRY TIE
ENTRY THREE
How OtherBot speaks: SAMPLECHAT OtherBot

<START>
MainChar: FIRST
ChatOwner: 1-TRIGGER
ChatOwner: TIE-TRIGGER
ChatOwner: 20-TRIGGER
OtherBot:"
`;

exports[`Prompt building will use correct placeholders in scenario and sample chat 1`] = `
"OtherBot's Persona: OtherBot replies a lot

Scenario: MAIN MainChar
How OtherBot speaks: SAMPLECHAT OtherBot

<START>

OtherBot:"
`;
